@model TechStockWeb.Models.MaterialManagement
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = Localizer["Sign Product"];
}

<h1>@Localizer["Sign Product"]</h1>

<p><strong>@Localizer["Product"]:</strong> @Model.Product.Name</p>


<canvas id="signatureCanvas" width="400" height="200" style="border:1px solid #000;"></canvas>
<br>
<button type="button" class="btn btn-warning" onclick="clearCanvas()">@Localizer["Clear"]</button>


<form method="post" asp-action="SaveSignature">
    <input type="hidden" name="id" value="@Model.Id" />
    <input type="hidden" id="signatureData" name="signature" />
    <button type="submit" class="btn btn-success" onclick="saveSignature()">@Localizer["Submit Signature"]</button>
</form>

<script>
    let canvas = document.getElementById("signatureCanvas");
    let ctx = canvas.getContext("2d");
    let drawing = false;

    canvas.addEventListener("mousedown", function () { drawing = true; });
    canvas.addEventListener("mouseup", function () { drawing = false; ctx.beginPath(); });
    canvas.addEventListener("mousemove", draw);

    function draw(event) {
        if (!drawing) return;
        ctx.lineWidth = 2;
        ctx.lineCap = "round";
        ctx.strokeStyle = "black";
        ctx.lineTo(event.offsetX, event.offsetY);
        ctx.stroke();
        ctx.beginPath();
        ctx.moveTo(event.offsetX, event.offsetY);
    }

    function clearCanvas() {
        ctx.clearRect(0, 0, canvas.width, canvas.height);
    }

    function saveSignature() {
        let dataURL = canvas.toDataURL();
        document.getElementById("signatureData").value = dataURL;
    }
</script>
