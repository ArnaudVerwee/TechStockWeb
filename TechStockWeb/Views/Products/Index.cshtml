@model IEnumerable<TechStockWeb.Models.Product>
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@using Microsoft.Extensions.Localization
@using System.Globalization
@using TechStockWeb.Resources
@inject Microsoft.Extensions.Localization.IStringLocalizer<TechStockWeb.Controllers.ProductsController> StringLocalizer

@inject IStringLocalizer<SharedResource> StringLocalizer

@{
    ViewData["Title"] = "Index";
}

<h1>@Localizer["Title"]</h1>

<p>
    <a asp-action="Create" class="btn btn-success">
        <i class="bi bi-plus-circle"></i> @Localizer["CreateNew"]
    </a>
</p>


<form method="get" class="mb-4">
    <div class="row">
        <div class="col-md-3">
            <label for="SearchName">@Localizer["Name"]</label>
            <input type="text" name="SearchName" class="form-control" value="@ViewData["SearchName"]" />
        </div>

        <div class="col-md-3">
            <label for="SearchSerialNumber">@Localizer["SerialNumber"]</label>
            <input type="text" name="SearchSerialNumber" class="form-control" value="@ViewData["SearchSerialNumber"]" />
        </div>

        <div class="col-md-3">
            <label for="SearchType">@Localizer["Type"]</label>
            <select name="SearchType" class="form-control">
                <option value="">@Localizer["All"]</option>
                @foreach (var type in (IEnumerable<SelectListItem>)ViewBag.TypeList)
                {
                    <option value="@type.Value" selected="@(type.Value == ViewData["SearchType"]?.ToString())">@type.Text</option>
                }
            </select>
        </div>

        <div class="col-md-3">
            <label for="SearchSupplier">@Localizer["Supplier"]</label>
            <select name="SearchSupplier" class="form-control">
                <option value="">@Localizer["All"]</option>
                @foreach (var supplier in (IEnumerable<SelectListItem>)ViewBag.SupplierList)
                {
                    <option value="@supplier.Value" selected="@(supplier.Value == ViewData["SearchSupplier"]?.ToString())">@supplier.Text</option>
                }
            </select>
        </div>

        <div class="col-md-3">
            <label for="SearchUser">@Localizer["User"]</label>
            <select name="SearchUser" class="form-control">
                <option value="">@Localizer["All"]</option>
                <option value="NotAssigned" selected="@(ViewData["SearchUser"]?.ToString() == "NotAssigned")">
                    @Localizer["NotAssigned"]
                </option>
                @foreach (var user in (IEnumerable<SelectListItem>)ViewBag.Users)
                {
                    <option value="@user.Value" selected="@(user.Value == ViewData["SearchUser"]?.ToString())">
                        @user.Text
                    </option>
                }
            </select>
        </div>



    </div>

    <div class="mt-3">
        <button type="submit" class="btn btn-primary">
            <i class="bi bi-search"></i> @Localizer["Search"]
        </button>
        <a asp-action="Index" class="btn btn-secondary">
            <i class="bi bi-arrow-clockwise"></i> @Localizer["Reset"]
        </a>
    </div>
</form>


<table class="table table-striped">
    <thead>
        <tr>
            <th>@Localizer["Name"]</th>
            <th>@Localizer["SerialNumber"]</th>
            <th>@Localizer["TypeArticle"]</th>
            <th>@Localizer["Supplier"]</th>
            <th>@Localizer["User"]</th>
            <th>@Localizer["Actions"]</th>

        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            
            var assignments = (IEnumerable<TechStockWeb.Models.MaterialManagement>)ViewBag.MaterialAssignments;
            var assignment = assignments.FirstOrDefault(m => m.ProductId == item.Id);

            <tr>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.SerialNumber)</td>
                <td>@Html.DisplayFor(modelItem => item.TypeArticle.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Supplier.Name)</td>
                <td>
                    @if (assignment != null)
                    {
                        <span>@assignment.User.UserName</span>
                    }
                    else
                    {
                        <span class="text-muted">@Localizer["NotAssigned"]</span>
                    }
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm">
                        <i class="bi bi-pencil"></i>
                    </a>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm">
                        <i class="bi bi-eye"></i>
                    </a>

                    @if (assignment == null)
                    {
                        <a asp-controller="MaterialManagements" asp-action="AssignToUser" asp-route-id="@item.Id" class="btn btn-primary">
                            @Localizer["AssignToUser"]
                        </a>


                    }
                    else
                    {
                        <form asp-action="UnassignFromUser" asp-route-id="@item.Id" method="post" style="display:inline;">
                            <button type="submit" class="btn btn-secondary btn-sm">
                                <i class="bi bi-person-x"></i> @Localizer["Unassign"]
                            </button>
                        </form>

                    }

                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">
                        <i class="bi bi-trash"></i>
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>
